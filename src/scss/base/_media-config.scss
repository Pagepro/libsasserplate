/* ==========================================================================
   Media config
   ========================================================================== */

// Examples:
// In mobile-first approach we should use:
// @include media(mobile) that means (min-width: mobile);
//
// To create custom styles (eg. works only on mobile like hamburger) 
// and avoid override them on higher breakpoints, we can use:;
// @include media(0, mobile) that means (min-width: 0) and (max-width: mobile - 1px);

@mixin media($minWidth, $maxWidth: null) {
    @if type-of($minWidth) != number {
        $minWidth: breakpoint($minWidth);
    }

    @if ($minWidth != null) {
        @if ($maxWidth != null) {
            @if type-of($maxWidth) != number {
                $maxWidth: breakpoint($maxWidth);
            }

            @media (min-width: $minWidth) and (max-width: $maxWidth - 1px) {
                @content;
            }
        } @else {
            @if ($minWidth != 0) {
                @media (min-width: $minWidth) {
                    @content;
                }
            } @else {
                @content;
            }
        }
    } @else {
        @warn "Unfortunately, no value could be retrieved from '#{$minWidth}'." + " Please make sure it is defined in `$breakpoints` map.";
    }
}

// To create map of styles that includes breakpoints for some component, try this mixin
//
// Example of using:
// .l-header {
// 	$header-title-font-sizes: (
//     	mobile: 24px,
//     	tablet: 32px,
//     	desktop: 36px,
// 	);
//  &__title {
//	 @include each-breakpoint($header-title-font-sizes, font-size);
//  }
// }

@mixin each-breakpoint($map, $properties) {
    @each $bp, $value in $map {
        $newValue: $value;

        @include media($bp) {
            @each $property in $properties {
                #{$property}: $newValue;
            }
        }
    }
}
