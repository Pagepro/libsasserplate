/* ==========================================================================
   Index of scss files
   @mixin ========================================================================= */
/* External
   @mixin ========================================================================= */
@import url("../../node_modules/normalize.css/normalize.css");
/* Base
   @mixin ========================================================================= */
/* ==========================================================================
   Variables
   ========================================================================== */
/* Maps
========================================================================== */
/*
    The names and values of variables in maps are just suggestions/random values.
    Feel free to add new values, modify both the values and/or keys of the items depending on the project and your prefferences.
    For each map, a functions is defined (in base/_functions.scss).
    By default, function names are single a singular form of the map's variable name.
    Eg. To use the "main" color, a getter function "color" is defined.
    To use it, simply call: color(main).
*/
/* Standalone variables
========================================================================== */
/* Breakpoints for include-media plugin
========================================================================== */
/* ==========================================================================
   Mixins
   ========================================================================== */
/* 1. Font smoothing
========================================================================== */
/* Better font-rendering on OSX
   https://maximilianhoffmann.com/posts/better-font-rendering-on-osx
*/
/* 2. A clearfix for floated elements
========================================================================== */
/* 3. Append a modificator class that changes color/bg
========================================================================== */
/* ==========================================================================
   Typography
   ========================================================================== */
/* Global texts
========================================================================== */
html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 14px; }

body {
  font-family: Arial, sans-serif;
  color: #000;
  line-height: 1.2; }

a {
  cursor: pointer;
  text-decoration: none;
  color: currentColor; }
  a:hover {
    text-decoration: none; }

/* ==========================================================================
User interface
========================================================================== */
.ui-link {
  position: relative;
  overflow: hidden;
  color: #d4213d; }
  .ui-link:before {
    content: '';
    display: block;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 1px;
    -webkit-transition: 0.18s cubic-bezier(0.52, 0.01, 0.16, 1);
    -o-transition: 0.18s cubic-bezier(0.52, 0.01, 0.16, 1);
    -moz-transition: 0.18s cubic-bezier(0.52, 0.01, 0.16, 1);
    transition: 0.18s cubic-bezier(0.52, 0.01, 0.16, 1);
    -webkit-transform: scaleX(0);
       -moz-transform: scaleX(0);
        -ms-transform: scaleX(0);
         -o-transform: scaleX(0);
            transform: scaleX(0);
    -webkit-transform-origin: 0 50%;
       -moz-transform-origin: 0 50%;
        -ms-transform-origin: 0 50%;
         -o-transform-origin: 0 50%;
            transform-origin: 0 50%;
    background: currentColor; }
  .ui-link:hover:before {
    -webkit-transition-timing-function: cubic-bezier(0.62, 0.02, 0.34, 1);
       -moz-transition-timing-function: cubic-bezier(0.62, 0.02, 0.34, 1);
         -o-transition-timing-function: cubic-bezier(0.62, 0.02, 0.34, 1);
            transition-timing-function: cubic-bezier(0.62, 0.02, 0.34, 1);
    -webkit-transition-duration: .24s;
       -moz-transition-duration: .24s;
         -o-transition-duration: .24s;
            transition-duration: .24s;
    -webkit-transform: scaleX(1);
       -moz-transform: scaleX(1);
        -ms-transform: scaleX(1);
         -o-transform: scaleX(1);
            transform: scaleX(1); }

.ui-bg--main {
  background-color: #000; }

.ui-bg--white {
  background-color: #fff; }

.ui-bg--accent {
  background-color: #d4213d; }

.ui-bg--blue {
  background-color: #09A6E4; }

.ui-color--main {
  color: #000; }

.ui-color--white {
  color: #fff; }

.ui-color--accent {
  color: #d4213d; }

.ui-color--blue {
  color: #09A6E4; }

.ui-icon {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -moz-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
  width: 1em;
  height: 1em;
  -webkit-flex-shrink: 0;
      -ms-flex-negative: 0;
          flex-shrink: 0; }

.ui-unordered-list,
.ui-ordered-list {
  margin: 0;
  padding: 0;
  list-style: none;
  padding-left: 1em; }
  .ui-unordered-list li,
  .ui-ordered-list li {
    margin: 1rem 0; }

.ui-button {
  height: 1em;
  padding: 0.5em 1em;
  background: #d4213d;
  color: #fff;
  -webkit-border-radius: 4px;
     -moz-border-radius: 4px;
          border-radius: 4px; }

.ui-form fieldset, fieldset.ui-fieldset {
  margin: 0;
  padding: 0;
  border: 0; }

.ui-form input[type=text]::-ms-clear, input.ui-input[type=text]::-ms-clear {
  display: none; }

.ui-form select, select.ui-select {
  position: relative;
  z-index: 2;
  width: 100%;
  -webkit-border-radius: 0;
     -moz-border-radius: 0;
          border-radius: 0;
  background: transparent;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }
  .ui-form select::-ms-expand, select.ui-select::-ms-expand {
    display: none; }

.ui-form textarea, textarea.ui-textarea {
  max-height: 10em;
  padding: 1em;
  resize: vertical; }

.ui-form input::-webkit-input-placeholder, input.ui-input::-webkit-input-placeholder, input textarea::-webkit-input-placeholder, .ui-form
textarea::-webkit-input-placeholder,
textarea.ui-input::-webkit-input-placeholder,
textarea textarea::-webkit-input-placeholder {
  color: currentColor; }

.ui-form input:-moz-placeholder, input.ui-input:-moz-placeholder, input textarea:-moz-placeholder, .ui-form
textarea:-moz-placeholder,
textarea.ui-input:-moz-placeholder,
textarea textarea:-moz-placeholder {
  color: currentColor; }

.ui-form input::-moz-placeholder, input.ui-input::-moz-placeholder, input textarea::-moz-placeholder, .ui-form
textarea::-moz-placeholder,
textarea.ui-input::-moz-placeholder,
textarea textarea::-moz-placeholder {
  color: currentColor; }

.ui-form input:-ms-input-placeholder, input.ui-input:-ms-input-placeholder, input textarea:-ms-input-placeholder, .ui-form
textarea:-ms-input-placeholder,
textarea.ui-input:-ms-input-placeholder,
textarea textarea:-ms-input-placeholder {
  color: currentColor; }

.ui-form input::-ms-input-placeholder, input.ui-input::-ms-input-placeholder, input textarea::-ms-input-placeholder, .ui-form
textarea::-ms-input-placeholder,
textarea.ui-input::-ms-input-placeholder,
textarea textarea::-ms-input-placeholder {
  color: currentColor; }

.ui-form input::placeholder, input.ui-input::placeholder, input textarea::placeholder, .ui-form
textarea::placeholder,
textarea.ui-input::placeholder,
textarea textarea::placeholder {
  color: currentColor; }

.ui-form input, input.ui-input, input select, .ui-form
select,
select.ui-input,
select select {
  padding: 0 0.5em;
  height: 2rem; }

.ui-form input, input.ui-input, input textarea, input select, .ui-form
textarea,
textarea.ui-input,
textarea textarea,
textarea select, .ui-form
select,
select.ui-input,
select textarea,
select select {
  -webkit-border-radius: 0;
     -moz-border-radius: 0;
          border-radius: 0;
  -webkit-box-shadow: none;
     -moz-box-shadow: none;
          box-shadow: none; }
  .ui-form input, .ui-form input:-webkit-autofill, input.ui-input, input.ui-input:-webkit-autofill, input textarea, input textarea:-webkit-autofill, input select, input select:-webkit-autofill, .ui-form
  textarea, .ui-form
  textarea:-webkit-autofill,
  textarea.ui-input,
  textarea.ui-input:-webkit-autofill,
  textarea textarea,
  textarea textarea:-webkit-autofill,
  textarea select,
  textarea select:-webkit-autofill, .ui-form
  select, .ui-form
  select:-webkit-autofill,
  select.ui-input,
  select.ui-input:-webkit-autofill,
  select textarea,
  select textarea:-webkit-autofill,
  select select,
  select select:-webkit-autofill {
    border: solid 1px #000; }
  .ui-form input:-webkit-autofill, input.ui-input:-webkit-autofill, input textarea:-webkit-autofill, input select:-webkit-autofill, .ui-form
  textarea:-webkit-autofill,
  textarea.ui-input:-webkit-autofill,
  textarea textarea:-webkit-autofill,
  textarea select:-webkit-autofill, .ui-form
  select:-webkit-autofill,
  select.ui-input:-webkit-autofill,
  select textarea:-webkit-autofill,
  select select:-webkit-autofill {
    -webkit-box-shadow: none;
            box-shadow: none; }
  .ui-form input:focus, input.ui-input:focus, input textarea:focus, input select:focus, .ui-form
  textarea:focus,
  textarea.ui-input:focus,
  textarea textarea:focus,
  textarea select:focus, .ui-form
  select:focus,
  select.ui-input:focus,
  select textarea:focus,
  select select:focus {
    outline: none; }

/* Layout and sections
   @mixin ========================================================================= */
/* ==========================================================================
   Footer
   ========================================================================== */
/* ==========================================================================
   Header
   ========================================================================== */
/* ==========================================================================
   Inner
   ========================================================================== */
.l-inner {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
     -moz-box-orient: vertical;
     -moz-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  width: 100%;
  max-width: 960px;
  margin: 0 auto;
  vertical-align: baseline; }
  @media (max-width: 1399px) {
    .l-inner {
      padding-right: 1em;
      padding-left: 1em; } }

/* ==========================================================================
   Main content
   ========================================================================== */
* {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box; }

/* ==========================================================================
   Sections
   ========================================================================== */
/* Components
   @mixin ========================================================================= */
/* ==========================================================================
Forms
========================================================================== */
/* ==========================================================================
   Logos
   ========================================================================== */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
